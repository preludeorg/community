id: 0b044323-bf6b-4856-8d70-372942983aab
name: A (variant) attack
challenge: |
  Locate the TTP named "Find recent files" and write a variant for your platform that searches your /tmp (or TEMP)
  directory for recently modified files. Then deploy the TTP against your ThirdEye agent.
context: |
  Just as there are numerable procedures for any given ATT&CK technique, each procedure may have variations itself.
  For example, a procedure that does a port scan may look like this: nmap -Pn example.com. This will scan example.com
  for open ports but avoid pinging the host. You may want to include software versions in your port scan, so a variation
  of this command may be: nmap -Pn -sV example.com. Instead of creating a new TTP for each of these variations you can
  outline each variant in a single TTP file. To start, find and edit the exisiting "Find recent files" TTP which will create
  a modified version of said TTP. Next follow the syntaxing for variants which can be found in the example TTP: 
  'Update agent beacon protocol'. Finally, once you have created and appended your variations to the new TTP, verify 
  your work by entering in the TTP ID. 
template:
  name: input
  data: []
resources:
  links:
    Update agent beacon protocol: https://github.com/preludeorg/community/blob/master/ttps/command-and-control/23c5cb2f-3f6f-4770-b260-13edf23f5903.yml
hints:
  - Use the search feature in Launch Chain to locate the TTP
  - You may want to search other TTPs to find examples of variants so you can copy the syntax.
blocks:
  The /tmp directory: |
    The /tmp (or TEMP) directory on a computer stores temporary files that will be removed automatically by your operating
    system over time or after a reboot. Adversaries will often store malicious code here or use it as a "home base" of 
    sorts because it's an often overlooked directory.
answer:
  script: 
    Number(Attack.a[$('#answer').val()].platforms.darwin.sh.variants[0].command.toLowerCase().includes('tmp') || 
    Attack.a[$('#answer').val()].platforms.linux.sh.variants[0].command.toLowerCase().includes('tmp') ||
    Attack.a[$('#answer').val()].platforms.windows.psh.variants[0].command.toLowerCase().includes('temp'))
  value: 1
