id: e5a1622e-2e12-4f5a-9908-823af1642c08
name: Learn about recommended TTPs
challenge: |
  How many TTPs are recommended for the following procedure: ea713bc4-63f0-491c-9a6f-0b01d560b87e (file.io exfil)?
context: |
  Recommendations are helpful when building your own chains. Prelude security engineers use their offensive
  experience to create recommendations for each procedure so you can quickly construct your own chains. 
  Recommendations are built using the MITRE ATT&CK classification system. For example, if a common adversary behavior 
  is to combine T1005 (Data from a Local System) with T1074 (Data Staged), we'll recommend these be used together.
  By using the ATT&CK framework to classify our recommendations, we're able to provide custom recommendations for any 
  TTP you import into Operator - or even build yourself.
template:
  name: input
  data: []
resources:
  links:
    Automated decision making: https://feed.prelude.org/p/how-decisions-are-made
    Mimicking evil: https://feed.prelude.org/p/mimicking-evil
    Security recommendations: https://feed.prelude.org/p/action-oriented-red-teaming
hints:
  - Open the Chain sidebar to view recommended TTPs.
  - The Headquarters API can also be used to view adversary chains via the /protect endpoint
blocks:
  Potential chains: |
    Operator includes a concept we call potential chains. These chains are pre-determined sequences of ATT&CK
    techniques we have identified as being malicious and used in real world attacks. Operator tracks 100+ malicious
    technique chains. Because Operator contains hundreds of procedures, it creates every possible variation of a
    malicious chain (because we store multiple versions of a procedure for a single technique). Inside the Editor section, 
    you can view the potential chains a given procedure is a part of, which is helpful for composing
    your own attacks.
  View chains from your own TTPs: |
    Operator contains a REST API endpoint, located at https://login.prelude.org/protect, which allows you to submit a
    set of your own TTPs - classified by the ATT&CK framework - and receive them back organized into chains of attack
    we recommend you use. Of course, you can also do this from the Chain sidebar inside Operator.
answer:
  script: |
    new Promise((resolve, reject) =>
      Requests.hq.getPotentialChains('ea713bc4-63f0-491c-9a6f-0b01d560b87e').then((potential) => {
        const unique = new Set(Object.values(potential).flat());
        resolve((unique.size - 1) === parseInt($('#answer').val()) ? 1 : 0);
      }));
  value: 1
