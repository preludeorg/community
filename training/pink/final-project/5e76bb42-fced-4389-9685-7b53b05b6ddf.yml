id: 5e76bb42-fced-4389-9685-7b53b05b6ddf
name: Your final project
challenge: |
  You work in the IT department of a small furniture store. Your boss walks up to you with a CISA report that shows 
  ransomware was last year's fastest growing cyber threat. She asks you how well prepared the store is against such
  an attack. Can you provide an answer?
context: |
  Start by reading the linked report. This will set the stage for what you will need to do in this final project. 
  Then select either a Windows or MacOS computer to act as your test environment. Get an agent running on this computer, 
  attached to your test environment, then write the following TTPs based on the mitigations section of the report:
  <ol>
      <li>
        Check if the computer is up-to-date with its security settings and patches. (Exection: T1005)
      </li>
      <li>
        Check if RDP or SSH is installed and/or running on the computer.
      </li>
      <li>
        List all active network connections on the computer, so you can look for abnormal activity.
      </li>
      <li>
        Look for plain-text passwords held in text or CSV files on the computer.
      </li>
      <li>
        Check if the computer has an antivirus installed and that it is running.
      </li>
  </ol>
  Once you've written the TTPs, create a chain and attach them to it. You can have more than one TTP per category above,
  if you'd like. Then deploy the chain against your test agent adn collect the results. All TTPs must successfully 
  complete. When you're finished, click verify to see if Operator can validate your results. If you'd like additional
  feedback on your test... 
template:
  name: input
  data: []
resources:
  audio:
    link: https://s3.amazonaws.com/operator.recordings/protect-mode.m4a
  links:
    CISA report: https://www.cisa.gov/uscert/ncas/alerts/aa22-040a
hints: []
blocks:
  What happens when I finish?: |
    Once you complete your final project, the Prelude team will be notified and you will receive an email containing
    your Pink Badge certificate.
answer:
  script: 
      const adversary = Object.values(Adversary.adversaries).filter(a => a.name === $('#answer').val())[0]
      const ttps = adversary.ttps.map(ttp => Attack.attack[ttp]);
      const rules = [
        (ttp) => ttp.tactic === "Discovery" && ttp.technique.id.split('.') == "T1082" && ttp.platforms.darwin.sh.command.toLowerCase().includes(''),
        (ttp) => ttp.tactic === "Discovery" && ttp.technique.id.split('.') == "T1057" && ttp.platforms.darwin.sh.command.toLowerCase().includes(''),
        (ttp) => ttp.tactic === "Discovery" && ttp.technique.id.split('.') == "T1046" && ttp.platforms.darwin.sh.command.toLowerCase().includes(''),
        (ttp) => ttp.tactic === "Discovery" && ttp.technique.id.split('.') == "T1518" && ttp.platforms.darwin.sh.command.toLowerCase().includes(''),
        (ttp) => ttp.tactic === "Collection" && ttp.technique.id.split('.') == "T1005" && ttp.platforms.darwin.sh.command.toLowerCase().includes('')
      ];
      rules.filter(rule => {
        return !ttps.filter(ttp => rule(ttp)).length;
      }).length === 0
  value: true
